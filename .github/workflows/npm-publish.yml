name: Release Npm Package

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'node_modules/**'
      - '.env'

jobs:
  publish-npm-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    outputs:
      version: ${{ steps.get_version.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 添加安装依赖和构建步骤
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install -g \
            release-it \
            @release-it/conventional-changelog \
            @release-it/bumper
          git remote rm origin
          git remote add origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git fetch -p
          git symbolic-ref HEAD refs/heads/main
          git branch --set-upstream-to=origin/main main
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
          cat ~/.npmrc || true
          npm whoami
          npm run release

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Trigger Docker workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-docker-build
          client-payload: '{"version": "${{ steps.get_version.outputs.version }}"}'